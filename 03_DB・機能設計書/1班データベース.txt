CREATE TABLE School (
    school_code VARCHAR(2) PRIMARY KEY,
    school_name VARCHAR(20) NOT NULL
);

CREATE TABLE User (
    user_id INT(8) UNSIGNED ZEROFILL AUTO_INCREMENT PRIMARY KEY,
    mail VARCHAR(32) NOT NULL,
    password VARCHAR(255) NOT NULL,
    user_name VARCHAR(32) NOT NULL,
    school_code VARCHAR(2) NOT NULL,
    school_year VARCHAR(8) NOT NULL,
    major VARCHAR(16),
    comment VARCHAR(32),
    gender VARCHAR(3) NOT NULL,
    icon VARCHAR(32),
    FOREIGN KEY (school_code) REFERENCES School(school_code)
);

CREATE TABLE EventCategory (
    event_category_code VARCHAR(2) PRIMARY KEY,
    category_name VARCHAR(8) NOT NULL
);

CREATE TABLE Event (
    event_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT(8) UNSIGNED ZEROFILL NOT NULL,
    event_category_code VARCHAR(2) NOT NULL,
    title VARCHAR(16) NOT NULL,
    datetime DATETIME NOT NULL,
    comment VARCHAR(128) NOT NULL,
    building_number INT NOT NULL,
    held_datetime DATETIME NOT NULL,
    end_datetime DATETIME NOT NULL,
    FOREIGN KEY (user_id) REFERENCES User(user_id),
    FOREIGN KEY (event_category_code) REFERENCES EventCategory(event_category_code)
);

CREATE TABLE Image (
    image_id INT AUTO_INCREMENT PRIMARY KEY,
    event_id INT NOT NULL,
    file_path VARCHAR(16) NOT NULL,
    FOREIGN KEY (event_id) REFERENCES Event(event_id)
);

CREATE TABLE EventReply (
    event_reply_id INT AUTO_INCREMENT PRIMARY KEY,
    event_id INT NOT NULL,
    user_id INT(8) UNSIGNED ZEROFILL NOT NULL,
    datetime DATETIME NOT NULL,
    reply_content VARCHAR(64) NOT NULL,
    parent_event_reply_id INT,
    event_reply_status Boolean NOT NULL DEFAULT TRUE,
    FOREIGN KEY (event_id) REFERENCES Event(event_id),
    FOREIGN KEY (user_id) REFERENCES User(user_id),
    FOREIGN KEY (parent_event_reply_id) REFERENCES EventReply(event_reply_id)
);

CREATE TABLE ForumCategory (
    forum_category_code VARCHAR(2) PRIMARY KEY,
    category_name VARCHAR(8) NOT NULL
);

CREATE TABLE Forum (
    forum_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT(8) UNSIGNED ZEROFILL NOT NULL,
    forum_category_code VARCHAR(2) NOT NULL,
    datetime DATETIME NOT NULL,
    building_number INT NOT NULL,
    title VARCHAR(32) NOT NULL,
    post_content VARCHAR(128) NOT NULL,
    FOREIGN KEY (user_id) REFERENCES User(user_id),
    FOREIGN KEY (forum_category_code) REFERENCES ForumCategory(forum_category_code)
);

CREATE TABLE ForumMessage (
    forum_message_id INT AUTO_INCREMENT PRIMARY KEY,
    forum_id INT NOT NULL,
    message_content VARCHAR(128) NOT NULL,
    FOREIGN KEY (forum_id) REFERENCES Forum(forum_id)
);


CREATE TABLE Calendar (
    calendar_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT(8) UNSIGNED ZEROFILL NOT NULL,
    event_id INT NOT NULL,
    registration_status BOOLEAN NOT NULL DEFAULT TRUE,
    FOREIGN KEY (user_id) REFERENCES User(user_id),
    FOREIGN KEY (event_id) REFERENCES Event(event_id)
);

CREATE TABLE Notification (
    notification_id INT AUTO_INCREMENT PRIMARY KEY,
    reception_user_id INT(8) UNSIGNED ZEROFILL NOT NULL,
    transmission_user_id INT(8) UNSIGNED ZEROFILL NOT NULL,
    notification_type INT(3) NOT NULL,
    event_id INT,
    forum_id INT,
    FOREIGN KEY (reception_user_id) REFERENCES User(user_id),
    FOREIGN KEY (transmission_user_id) REFERENCES User(user_id),
    FOREIGN KEY (event_id) REFERENCES Event(event_id),
    FOREIGN KEY (forum_id) REFERENCES Forum(forum_id)
);